* {
    box-sizing: border-box;
}

html,
body,
.wrapper {
    margin: 0;
    height: 100%;
    font-family: 'Avenir';
    font-weight: 600;
    font-size: 18px;
    color: black;
}

.wrapper {
    background: linear-gradient(180deg, rgba(253, 163, 255, 0.05) 0%, rgba(201, 158, 255, 0.05) 100%), linear-gradient(-25deg, rgba(108, 41, 217, 0.2) 0.24%, rgba(140, 200, 255, 0.2) 100%), radial-gradient(433.96px at 99.12% 97%, rgba(140, 255, 207, 0.1) 0%, rgba(107, 193, 255, 0.1) 100%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border: 2px solid black;
}

.game-container {
    height: 500px;
    width: 500px;
    background: linear-gradient(-135deg, #fff, #e8e9eb 600%);
    background: repeating-linear-gradient(45deg, #fafafa, #fafafa 10px, #eee 10px, #eee 12px);
    border: 2px solid black;
    box-shadow: 0 35px 105px -30px rgb(176, 181, 222);
    border-radius: 25px;
    background: contain;
    padding: 2.618em;
}

#grid {
    height: 100%;
    width: 100%;
    display: grid;
    grid-gap: 15px;
    grid-template-columns: repeat(4, 25%);
    grid-auto-rows: 25%;
    align-content: center;
    justify-content: center;
}

.game-wrapper {
    width: 500px;
}

.card {
    font-size: 1.618em;
    position: relative;
    height: 100%;
    width: 100%;
    cursor: pointer;
    transform-style: preserve-3d;
    transition: all 0.5s;
}

.card__side {
    border: 2px solid black;
    box-shadow: 0 3px 10px -3px rgba(0, 0, 0, 0.269);
    border-radius: 15px;
    position: absolute;
    height: 100%;
    width: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}

.card__front {
    background: #fafafa;
    transform: rotateY(180deg);
}

.card__back {
    background: linear-gradient(135deg, #b5e8e8, #59dcda 200%);
    transform: rotateY(0deg);
}

/* ANIMATIONS */

.flipped {
    transform: rotateY(180deg);
}

.wiggle {
    animation: 0.5s wiggle linear;
}

.bounce {
    animation: 0.5s bounce linear;
}

/* this animation was resetting the card's transform property */
/* to maintain the property I needed to set rotateY(180deg) on evert frame */
@keyframes wiggle {
    0% {
        transform: rotate(0deg) rotateY(180deg);
    }
    25% {
        transform: rotate(-10deg) rotateY(180deg);
    }
    50% {
        transform: rotate(20deg) rotateY(180deg);
    }
    75% {
        transform: rotate(-5deg) rotateY(180deg);
    }
    100% {
        transform: rotate(0deg) rotateY(180deg);
    }
}

@keyframes bounce {
    0% {
        transform: translateY(0) rotateY(180deg);
    }
    25% {
        transform: translateY(-20px) rotateY(180deg);
    }
    50% {
        transform: translateY(5px) rotateY(180deg);
    }
    75% {
        transform: translateY(-5px) rotateY(180deg);
    }
    100% {
        transform: translateY(0) rotateY(180deg);
    }
}

.game-menu {
    width: 100%;
    display: grid;
    align-items: center;
    grid-template-columns: 1fr 1fr 1fr;
    padding: 1em 0.618em;
}

.reset-icon {
    background: url(../icons/refresh.svg);
    background-size: contain;
    height: 24px;
    width: 24px;
    cursor: pointer;
}

#timer {
    text-align: center;
}

.time-unit {
    font-weight: 100;
    margin: 0 1px 0 1px;
}

.game-info {
    display: inline-flex;
    align-items: center;
    justify-content: flex-end;
}

.move-stars {
    display: inline-flex;
    margin: 0 0 0 10px;
}

.filled-star {
    background: url(../icons/filled-star.svg)
}

.half-star {
    background: url(../icons/half-filled-star.svg)
}

.empty-star {
    background: url(../icons/empty-star.svg);
}

.star {
    display: block;
    background-size: contain;
    height: 18px;
    width: 18px;
}

#modal {
    position: absolute;
    background: rgba(255, 255, 255, 0.623);
    height: 100%;
    width: 100%;
    display: none;
    align-items: center;
    justify-content: center;
}

.fade-in {
    animation: fadeIn 0.5s ease-out;
}

.hide {
    animation: fadeOut 0.5s ease-in;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

.modal-content {
    background: repeating-linear-gradient(-45deg, #fff, #fff 10px, #fafafa 10px, #fafafa 12px);
    border: 2px solid black;
    border-radius: 15px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.13);
    padding: 1em 1.618em;
    display: flex;
    flex-direction: column;
}

.modal-content h3 {
    margin: 0;
}

.modal-content p {
    font-weight: 400;
}

.modal-content button {
    outline: none;
    background: white;
    border: 2px solid black;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    border-radius: 50px;
    padding: 0.618em 1.25em;
    align-self: center;
    display: flex;
    align-items: center;
    font-weight: 600;
    font-size: 14px;
    cursor: pointer;
}

.modal-content button::after {
    content: "";
    display: block;
    background: url(../icons/arrow.svg);
    background-size: contain;
    height: 20px;
    width: 20px;
    margin-left: 0.5em;
}